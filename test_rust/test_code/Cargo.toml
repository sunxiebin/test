[package]
name = "test_code"
version = "0.1.0"
edition = "2021"

# See more keys and their definitions at https://doc.rust-lang.org/cargo/reference/manifest.html
[lib]
crate-type=["cdylib","rlib"]

[features]
default = ["glow", "persistence"]

# image_viewer adds about 0.9 MB of WASM
web_app = ["http", "persistence"]

http = ["ehttp", "image", "poll-promise", "egui_extras/image"]
image_viewer = ["image", "egui_extras/all_loaders", "rfd"]
persistence = ["eframe/persistence", "egui/persistence", "serde"]
puffin = ["eframe/puffin", "dep:puffin", "dep:puffin_http"]
serde = ["dep:serde",  "egui/serde"]


glow = ["eframe/glow"]
wgpu = ["eframe/wgpu", "bytemuck", "dep:wgpu"]
wayland = ["eframe/wayland"]
x11 = ["eframe/x11"]

[dependencies]
chrono = { version = "0.4", default-features = false, features = [
  "js-sys",
  "wasmbind",
] }
eframe = {version = "0.27.2" , default-features = false, features = [
  "web_screen_reader",
] }
egui = { version = "0.27.2", features = [
  "callstack",
  "default",
  "extra_debug_asserts",
  "log",
] }

egui_extras = { version = "0.27.2" , features = ["default", "image"] }

# Optional dependencies:

bytemuck = { version = "1.7.1", optional = true }
puffin = { version = "0.16.0", optional = true }
puffin_http = { version ="0.16.0" , optional = true }
# Enable both WebGL & WebGPU when targeting the web (these features have no effect when not targeting wasm32)
wgpu = { version ="0.20.0", features = ["webgpu", "webgl"], optional = true }


# feature "http":
ehttp = { version = "0.5", optional = true }
image = { version = "0.24", optional = true, default-features = false, features = [
  "jpeg",
  "png",
] }
poll-promise = { version = "0.3", optional = true, default-features = false }

# feature "persistence":
serde = { version = "1", optional = true, features = ["derive"] }
rfd = { version = "0.13", optional = true }
#[target.'cfg(target_arch = "wasm32")'.dependencies]
wasm-bindgen = "0.2.92"
wasm-bindgen-futures = "0.4"
web-sys = "0.3"




